MCQs

Q1. Final constructor

Can we declare constructors as final?

Options
This problem has only one correct answer
(a) Yes
(b) No

Ans. (b) No ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q2. What is the output

class Base {
    public final void show() {
        System.out.println("Base show");
    }
}
class Derived extends Base {
    public void show() { 
        System.out.println("Derived show");
    }
}
public class Solution {
    public static void main(String[] args) {
        Base b = new Derived();
        b.show();
    }
}

Options
This problem has only one correct answer
(a) Base show
(b) Derived show
(c) Compilation error
(d) None

Ans. (c) Compilation error ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q3. Prevent inheritance

Which of these keywords can be used to prevent inheritance of a class?

Options
This problem has only one correct answer
(a) super
(b) final
(c) constant
(d) none

Ans. (b) final ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q4. Final class

Final class means -

Options
This problem has only one correct answer
(a) It cannot have non-final members
(b) It cannot be extended
(c) Its objects cannot be created
(d) All

Ans. (b) It cannot be extended ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q5. What is the output

abstract class A {
    int i;
    abstract void display();
}   
class B extends A {
    int j;
    void display() {
        System.out.println(j);
    }
}   
class Main {
    public static void main(String args[])
    {
        B obj = new B();
        obj.j=2;
        obj.display();   
    }
}

Options
This problem has only one correct answer
(a) 0
(b) 2
(c) Compilation Error
(d) Runtime Error

Ans. (b) 2 ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q6. Correct Statement

Chose the correct statement for the code given below -
public class Student{
    public abstract double numberOfStudent();
}

Options
This problem has only one correct answer
(a) The keywords public and abstract cannot be used together.
(b) The method numberOfStudent() in class Student must have a body.
(c) You must add a return statement in method numberOfStudent().
(d) Class Student must be defined abstract.

Ans. (d) Class Student must be defined abstract. ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q7. Abstract method

Which of the following declares an abstract method in an abstract Java class?

Options
This problem has only one correct answer
(a) public abstract method();
(b) public abstract void method();
(c) public void abstract Method();
(d) public void method() {}

Ans. (b) public abstract void method(); ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q8. Incorrect Statement

Which one of the following is not true?

Options
This problem has only one correct answer
(a) A class containing abstract methods is called an abstract class.
(b) Abstract methods should be implemented in the non-abstract derived class.
(c) An abstract class cannot have non-abstract methods
(d) None of the above.

Ans. (c) An abstract class cannot have non-abstract methods ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

Q9. What is the output

interface calculate {
    void cal(int item);
}
class display implements calculate {
    int x;
    public void cal(int item) {
        x = item * item;           
    }
}
class Solution {
    public static void main(String args[]) {
        display arr = new display();
        arr.x = 0;     
        arr.cal(2);
        System.out.print(arr.x);
    }
}

Options
This problem has only one correct answer
(a) 0
(b) 2
(c) 4
(d) None

Ans. (c) 4 ✓

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
