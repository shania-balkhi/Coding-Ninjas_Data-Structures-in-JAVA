MCQs 

Q1. BST

Which of the following is false about a binary search tree?(All are unique elements)

Options
This problem has only one correct answer
The parent is always greater than the left child.
The parent is always smaller than the right child.
The left and right sub-trees should also be BST.
The largest element is present at the root of the tree.

Ans. The largest element is present at the root of the tree.

***************************************************************************************************

Q2. Time Complexity

What is the worst case and average case time complexity of searching a node in a BST?

Options
This problem has only one correct answer
O(n) and O(nlog(n))
O(n) and O(log(n))
O(log(n)) and O(log(n))
O(log(n)) and O(n)

Ans. O(n) and O(log(n))

***************************************************************************************************

Q3. Height Of BST

What is the minimum height of a Binary search tree with 14 nodes?

Options
This problem has only one correct answer
3
4
5
6

Ans. 4

***************************************************************************************************

Q4. Height Of BST -2

You are given with the nodes of a binary search tree . Find the height of the BST.
15 , 10 , 5 , 9 , 18 , 29 , 3 , 2.
(Starting from an empty tree , insert 15(root of the tree) and then insert 10 and so on.)
Height of tree with single node is 1.

Ans. 5

***************************************************************************************************

Q5. Insertion In BST

Which one of the following is the tightest upper bound that represents the time complexity of inserting an object into a binary search tree of n nodes?

Options
This problem may have one or more correct answers
O(1)
O(log n)
O(n) 
O(n log n)

Ans. O(n)

***************************************************************************************************

Q6. Deleting A Node

Which node can be used to replace the deleted node of a BST? (The deleted node has both left and right child)

Options
This problem may have one or more correct answers
Inorder successor 
Preorder successor
Postorder successor
Inorder predecessor 

Ans. Inorder successor 
     Inorder predecessor 

***************************************************************************************************

Q7. Insertion/Deletion In BST

What are the worst-case complexities of insertion and deletion of a key in a binary search tree?

Options
This problem may have one or more correct answers
θ (log(n)) for both insertion and deletion
θ (n) for both insertion and deletion 
θ (n) for insertion and θ (log ) n for deletion
θ (log (n)) for insertion and θ (n) for deletion

Ans. θ (n) for both insertion and deletion 

***************************************************************************************************

Q8. 
