Q1. Queue

A queue is a ?

Options
This problem has only one correct answer
(a) FIFO (First In First Out) list
(b) LIFO (Last In First Out) list
(c) Ordered array
(d) Linear tree

Ans. (a) FIFO (First In First Out) list

******************************************************************************************************************

Q2. Correct Order

If the elements “p”, “q”, “r” and “s” are placed in a queue and are deleted one at a time, in what order will they be removed?

Options
This problem has only one correct answer
(a) srqp
(b) pqrs
(c) srpq
(d) qrsp

Ans. (b) pqrs

******************************************************************************************************************

Q3. Function

Consider the following pseudo code. Assume that IntQueue is an integer queue. What does the function fun do?
void fun(int n)
{
    IntQueue q = new IntQueue();
    q.enqueue(0);
    q.enqueue(1);
    for (int i = 0; i < n; i++)
    {
        int a = q.dequeue();
        int b = q.dequeue();
        q.enqueue(b);
        q.enqueue(a + b);
        System.out.print(a);
    }
}

Options
This problem has only one correct answer
(a) Print numbers 0 to n-1
(b) Print numbers n-1 to 0
(c) Print first n fibonacci numbers
(d) Print first n fibonacci numbers in reverse

Ans. (c) Print first n fibonacci numbers

******************************************************************************************************************

Q4. Queue Implementation

Suppose you are given an implementation of a queue of integers. The operations that can be performed on the queue are:
i. isEmpty (Q) — returns true if the queue is empty, false otherwise.

ii. delete (Q) — deletes the element at the front of the queue and returns its value.

iii. insert (Q, i) — inserts the integer i at the rear of the queue.
Consider the following function:

void f (queue Q) { 
   int i ; 
   if (!isEmpty(Q)) { 
   i = delete(Q); 
   f(Q); 
   insert(Q, i); 
   } 
} 

Options
This problem has only one correct answer
(a) Leaves the queue Q unchanged
(b) Reverses the order of the elements in the queue Q
(c) Deletes the element at the front of the queue Q and inserts it at the rear keeping the other elements in the same order
(d) Empties the queue Q.

Ans. (b) Reverses the order of the elements in the queue Q

Solution Description
As it is recursive call, and removing from front while inserting from end, that means last element will be deleted at last and will be inserted 1st in the new queue. And like that it will continue till first call executes insert(Q,i) function.
So, the queue will be in reverse.

******************************************************************************************************************

Q5. Insert Element

In optimized linked list implementation of a queue, where does a new element be inserted?

Options
This problem has only one correct answer
(a) At the head of linked list
(b) At the tail of the linked list
(c) At the centre position in the linked list
(d) None

Ans. (b) At the tail of the linked list

******************************************************************************************************************

Q6. Size of Circular Queue

If we have not maintained size variable in the circular queue(implemented using arrays) then how can we calculate the size of the queue.
front: index of the front element.
rear: index of the last element. 

a) size = rear - front +1
b) size = size of array - (front - rear) + 1
Note: Please ignore the case when front and rear are equal to each other.

Options
This problem has only one correct answer
(i) a)
(ii) b)
(iii) a) when rear is greater than front and b) when front is greater than rear.
(iv) none

Ans. (iii) a) when rear is greater than front and b) when front is greater than rear.

******************************************************************************************************************

Q7. Time complexity

What is the time complexity of performing doublecapacity function in case of queues?

Options
This problem has only one correct answer
(a) O(n)
(b) O(1)
(c) O(log(n))
(d) O(n^2)

Ans. (a) O(n)

******************************************************************************************************************

Q8. LL Queue

Which of the following is true about linked list implementation of queue?
(A) In enqueue operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end.
(B) In enqueue operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from the beginning.

Options
This problem has only one correct answer
(a) a)
(b) b)
(c) Both a) and b)
(d) none

Ans. (c) Both a) and b)

Solution Description
 To keep the First In First Out order, a queue can be implemented using linked list in any of the given two ways.

******************************************************************************************************************

Q9. Stack and Queue

The seven elements A, B, C, D, E, F and G are pushed onto a stack in reverse order, i.e., starting from G. The stack is popped four times and each element is inserted into a queue.Three elements are deleted from the queue and pushed back onto the stack. Now, two element are popped from the stack. Which element is at the top of the Stack ?

Options
This problem has only one correct answer
(a) A
(b) C
(c) D
(d) B

Ans. (a) A

******************************************************************************************************************

Q10. Worst case operation

In linked list implementation of queue, if only front pointer is maintained, which of the following operation take worst case time (i.e. O(n) )?

Options
This problem has only one correct answer
(a) Insertion from rear
(b) Deletion from front
(c) Both
(d) None

Ans. (a) Insertion from rear

******************************************************************************************************************

